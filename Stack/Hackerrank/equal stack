import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

    /*
     * Complete the equalStacks function below.
     */
    static int equalStacks(int[] h1, int[] h2, int[] h3) {
        /*
         * Write your code here.
         */
         Stack<Integer> st1=new Stack<Integer>();
         Stack<Integer> st2=new Stack<Integer>();
         Stack<Integer> st3=new Stack<Integer>();
        int sh1=0;int sh2=0; int sh3=0;
        for(int i=h1.length-1;i>=0;i--)
        {
            sh1=sh1+h1[i];
            st1.push(sh1);
        }
        for(int i=h2.length-1;i>=0;i--)
        {
            sh2=sh2+h2[i];
            st2.push(sh2);
        }
        for(int i=h3.length-1;i>=0;i--)
        {
            sh3=sh3+h3[i];
            st3.push(sh3);
        }
        while(true)
        {
            if(st1.isEmpty() || st2.isEmpty() || st3.isEmpty())                
            {
                return 0;
            }
            sh1=st1.peek();
            sh2=st2.peek();
            sh3=st3.peek();
            if(sh1==sh2 && sh2==sh3)
            {
                return sh1;
            }
            
            if(sh1>=sh2 && sh1>=sh3 )
            {
                st1.pop();
            }
            else if(sh2>=sh1 && sh2>=sh3 )
            {
                st2.pop();
            }
            else if(sh3>=sh2 && sh3>=sh1 )
            {
                st3.pop();
            }  
 
        
        
        
        }
    
    
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] n1N2N3 = scanner.nextLine().split(" ");

        int n1 = Integer.parseInt(n1N2N3[0].trim());

        int n2 = Integer.parseInt(n1N2N3[1].trim());

        int n3 = Integer.parseInt(n1N2N3[2].trim());

        int[] h1 = new int[n1];

        String[] h1Items = scanner.nextLine().split(" ");

        for (int h1Itr = 0; h1Itr < n1; h1Itr++) {
            int h1Item = Integer.parseInt(h1Items[h1Itr].trim());
            h1[h1Itr] = h1Item;
        }

        int[] h2 = new int[n2];

        String[] h2Items = scanner.nextLine().split(" ");

        for (int h2Itr = 0; h2Itr < n2; h2Itr++) {
            int h2Item = Integer.parseInt(h2Items[h2Itr].trim());
            h2[h2Itr] = h2Item;
        }

        int[] h3 = new int[n3];

        String[] h3Items = scanner.nextLine().split(" ");

        for (int h3Itr = 0; h3Itr < n3; h3Itr++) {
            int h3Item = Integer.parseInt(h3Items[h3Itr].trim());
            h3[h3Itr] = h3Item;
        }

        int result = equalStacks(h1, h2, h3);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();
    }
}
